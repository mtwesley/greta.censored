on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: test-coverage

jobs:
  test-coverage:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4  # Updated Node.js version

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: "release"

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          install.packages(c("remotes"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Install Miniconda
        run: |
          install.packages(c("remotes", "keras"))
          reticulate::install_miniconda()
        shell: Rscript {0}

      - name: Set options for conda binary for macOS
        if: runner.os == 'macOS'
        run: |
          echo "options(reticulate.conda_binary = reticulate:::miniconda_conda())" >> .Rprofile

      - name: Install TensorFlow
        run: |
          reticulate::conda_create(envname = "greta-env", python_version = "3.7")
          reticulate::conda_install(envname = "greta-env", packages = c("numpy==1.16.4", "tensorflow-probability==0.7.0", "tensorflow==1.14.0"))
        shell: Rscript {0}

      - name: Update Homebrew
        if: runner.os == 'macOS'
        run: |
          brew uninstall --force --ignore-dependencies qpdf || true
          brew update
          brew install qpdf

      - name: Debug Homebrew Environment
        if: runner.os == 'macOS'
        run: |
          brew doctor
          brew config

      - name: Python + TF details
        run: |
          Rscript -e 'tensorflow::tf_config()'
          Rscript -e 'tensorflow::tf_version()'
          Rscript -e 'reticulate::py_module_available("tensorflow_probability")'
          Rscript -e 'reticulate::py_config()'

      - name: Test coverage
        run: covr::codecov()
        shell: Rscript {0}